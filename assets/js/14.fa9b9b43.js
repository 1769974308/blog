(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{190:function(t,e,n){"use strict";n.r(e);var s=n(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[n("h1",{attrs:{id:"httpclient4进行文件上传"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#httpclient4进行文件上传","aria-hidden":"true"}},[t._v("#")]),t._v(" HttpClient4进行文件上传")]),t._v(" "),n("h2",{attrs:{id:"_1、概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、概述","aria-hidden":"true"}},[t._v("#")]),t._v(" 1、概述")]),t._v(" "),n("p",[t._v("描述如何使用HttpClient4进行一次多文件上传操作")]),t._v(" "),n("p",[t._v("Github:https://github.com/eugenp/tutorials/tree/master/httpclient#readme")]),t._v(" "),n("h2",{attrs:{id:"_2、使用addpart方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、使用addpart方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 2、使用AddPart方法")]),t._v(" "),n("p",[t._v("MultipartEntityBuilder对象，向一个Http实体添加成分，将会被通过一个POST操作上传")]),t._v(" "),n("p",[t._v("使用两个文本和一个文件上传一个表单")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('CloseableHttpClient  client = HttpClients.createDefault();\nString textFileName = "c:/6791.jpg";\nFile file = new File(textFileName);\nHttpPost post = new HttpPost("http://echo.200please.com");\nFileBody fileBody = new FileBody(file, ContentType.DEFAULT_BINARY);\nStringBody stringBody1 = new StringBody("Message 1", ContentType.MULTIPART_FORM_DATA);\nStringBody stringBody2 = new StringBody("Message 2", ContentType.MULTIPART_FORM_DATA);\n//\nMultipartEntityBuilder builder = MultipartEntityBuilder.create();\nbuilder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\nbuilder.addPart("upfile", fileBody);\nbuilder.addPart("text1", stringBody1);\nbuilder.addPart("text2", stringBody2);\nHttpEntity entity = builder.build();\n//\npost.setEntity(entity);\nHttpResponse response = client.execute(post);\n//\nString responseBody = EntityUtils.toString(response.getEntity(), "UTF-8");\nSystem.out.println("responseBody:"+responseBody);\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br")])]),n("p",[t._v("注意：也通过制定将会被服务器使用到的ContentType值来实例化Filec对象")]),t._v(" "),n("p",[t._v("同样还请注意 addPart 方法有两个参数，作用就像是表单的键值对 . 除非服务器端实际需要这些值并使用了这些参数名称，它们就是有干系的，否则它们就会被简单的忽略掉.")]),t._v(" "),n("h2",{attrs:{id:"_3、使用addbinarybody和addtextbody方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、使用addbinarybody和addtextbody方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 3、使用addBinaryBody和addTextBody方法")]),t._v(" "),n("p",[t._v("创建一个multipart实体更直接的方式就是使用 addBinaryBody 和 AddTextBody 方法. 这些方法服务于上传文本，文件，字符数组和 InputStream 对象. 用了一个简单的例子来描述如何使用它们 .")]),t._v(" "),n("p",[t._v("上传一个文本和一个文本文件部分")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('HttpPost post = new HttpPost("http://echo.200please.com");\nFile file = new File(textFileName);\nString message = "This is a multipart post";\nMultipartEntityBuilder builder = MultipartEntityBuilder.create();\nbuilder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\nbuilder.addBinaryBody("upfile", file, ContentType.DEFAULT_BINARY, textFileName);\nbuilder.addTextBody("text", message, ContentType.DEFAULT_BINARY);\n//\nHttpEntity entity = builder.build();\npost.setEntity(entity);\nHttpResponse response = client.execute(post);\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("注意这里不需要 FileBody 和 StringBody 对象")]),t._v(" "),n("p",[t._v("同样重要的是，大多数服务器不会检查文本体的 *ContentType * , 因此 addTextBody 方法可能会忽略掉 ContentType 值 .")]),t._v(" "),n("p",[t._v("addBinaryBody 的 API 接受一个 ContentType * - 但是它也有可能从一个二进制体来创建实体，而对应名称的表单参数持有了这个文件. 如前面小节所述，如果ContentType值没有被指定，一些服务器将不会识别这个文件")]),t._v(" "),n("p",[t._v("接下来，将一个zip文件作为一个 InputStream 添加进来, 而图片文件将会被作为File对象被添加进来:")]),t._v(" "),n("p",[t._v("上传一个ZIP文件，一个图片文件和一个文本块")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('HttpPost post = new HttpPost("http://echo.200please.com");\nInputStream inputStream = new FileInputStream(zipFileName);\nFile file = new File(imageFileName);\nString message = "This is a multipart post";\nMultipartEntityBuilder builder = MultipartEntityBuilder.create();\nbuilder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\nbuilder.addBinaryBody\n  ("upfile", file, ContentType.DEFAULT_BINARY, imageFileName);\nbuilder.addBinaryBody\n  ("upstream", inputStream, ContentType.create("application/zip"), zipFileName);\nbuilder.addTextBody("text", message, ContentType.TEXT_PLAIN);\n//\nHttpEntity entity = builder.build();\npost.setEntity(entity);\nHttpResponse response = client.execute(post);\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br")])]),n("p",[t._v("请注意ContentType值可以被动态创建，正如上面这个针对zip文件的示例中所示 .")]),t._v(" "),n("p",[t._v("最后，不是所有的服务器都接受 InputStream 部分. 我们在代码的第一行实体化的服务器可以接受 .")]),t._v(" "),n("p",[t._v("让我们现在来看看另外一个示例， addBinaryBody直接用于一个位数组")]),t._v(" "),n("p",[t._v("上传一个位数组和文本")]),t._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('HttpPost post = new HttpPost("http://echo.200please.com");\nString message = "This is a multipart post";\nbyte[] bytes = "binary code".getBytes();\n//\nMultipartEntityBuilder builder = MultipartEntityBuilder.create();\nbuilder.setMode(HttpMultipartMode.BROWSER_COMPATIBLE);\nbuilder.addBinaryBody("upfile", bytes, ContentType.DEFAULT_BINARY, textFileName);\nbuilder.addTextBody("text", message, ContentType.TEXT_PLAIN);\n//\nHttpEntity entity = builder.build();\npost.setEntity(entity);\nHttpResponse response = client.execute(post);\n')])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br")])]),n("p",[t._v("注意ContentType - 它现在被指定为二进制数据.")])])}],!1,null,null,null);e.default=a.exports}}]);